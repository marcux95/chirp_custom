library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.std_logic_unsigned.all;
use IEEE.numeric_std.all;

entity luts is
  Port (
        clk             : in std_logic;
        
        sin_coarse_add  : in std_logic_vector(7 downto 0);
        cos_coarse_add  : in std_logic_vector(7 downto 0);
        sin_fine_add    : in std_logic_vector(7 downto 0);
        cos_fine_add    : in std_logic_vector(7 downto 0);

        sin_coarse_data : out std_logic_vector(31 downto 0);
        cos_coarse_data : out std_logic_vector(31 downto 0);
        sin_fine_data   : out std_logic_vector(31 downto 0);
        cos_fine_data   : out std_logic_vector(31 downto 0)
  );
  
end luts;

architecture Behavioral of luts is

  type t_trigo_table is array(0 to 255) of integer range -65536 to 65535;

  constant SIN_COARSE_LUT : t_trigo_table := (

  0,
  1608,
  3215,
  4821,
  6423,
  8022,
  9615,
  11203,
  12785,
  14358,
  15923,
  17479,
  19023,
  20557,
  22078,
  23585,
  25079,
  26557,
  28019,
  29465,
  30892,
  32302,
  33691,
  35061,
  36409,
  37735,
  39039,
  40319,
  41574,
  42805,
  44010,
  45189,
  46340,
  47463,
  48558,
  49623,
  50659,
  51664,
  52638,
  53580,
  54490,
  55367,
  56211,
  57021,
  57796,
  58537,
  59242,
  59912,
  60546,
  61143,
  61704,
  62227,
  62713,
  63161,
  63570,
  63942,
  64275,
  64570,
  64825,
  65042,
  65219,
  65357,
  65456,
  65515,
  65535,
  65515,
  65456,
  65357,
  65219,
  65042,
  64825,
  64570,
  64275,
  63942,
  63570,
  63161,
  62713,
  62227,
  61704,
  61143,
  60546,
  59912,
  59242,
  58537,
  57796,
  57021,
  56211,
  55367,
  54490,
  53580,
  52638,
  51664,
  50659,
  49623,
  48558,
  47463,
  46340,
  45189,
  44010,
  42805,
  41574,
  40319,
  39039,
  37735,
  36409,
  35061,
  33691,
  32302,
  30892,
  29465,
  28019,
  26557,
  25079,
  23585,
  22078,
  20557,
  19023,
  17479,
  15923,
  14358,
  12785,
  11203,
  9615,
  8022,
  6423,
  4821,
  3215,
  1608,
  0,
  -1608,
  -3215,
  -4821,
  -6423,
  -8022,
  -9615,
  -11203,
  -12785,
  -14358,
  -15923,
  -17479,
  -19023,
  -20557,
  -22078,
  -23585,
  -25079,
  -26557,
  -28019,
  -29465,
  -30892,
  -32302,
  -33691,
  -35061,
  -36409,
  -37735,
  -39039,
  -40319,
  -41574,
  -42805,
  -44010,
  -45189,
  -46340,
  -47463,
  -48558,
  -49623,
  -50659,
  -51664,
  -52638,
  -53580,
  -54490,
  -55367,
  -56211,
  -57021,
  -57796,
  -58537,
  -59242,
  -59912,
  -60546,
  -61143,
  -61704,
  -62227,
  -62713,
  -63161,
  -63570,
  -63942,
  -64275,
  -64570,
  -64825,
  -65042,
  -65219,
  -65357,
  -65456,
  -65515,
  -65535,
  -65515,
  -65456,
  -65357,
  -65219,
  -65042,
  -64825,
  -64570,
  -64275,
  -63942,
  -63570,
  -63161,
  -62713,
  -62227,
  -61704,
  -61143,
  -60546,
  -59912,
  -59242,
  -58537,
  -57796,
  -57021,
  -56211,
  -55367,
  -54490,
  -53580,
  -52638,
  -51664,
  -50659,
  -49623,
  -48558,
  -47463,
  -46340,
  -45189,
  -44010,
  -42805,
  -41574,
  -40319,
  -39039,
  -37735,
  -36409,
  -35061,
  -33691,
  -32302,
  -30892,
  -29465,
  -28019,
  -26557,
  -25079,
  -23585,
  -22078,
  -20557,
  -19023,
  -17479,
  -15923,
  -14358,
  -12785,
  -11203,
  -9615,
  -8022,
  -6423,
  -4821,
  -3215,
  -1608
);

  constant COS_COARSE_LUT : t_trigo_table := (
  
  65535,
  65515,
  65456,
  65357,
  65219,
  65042,
  64825,
  64570,
  64275,
  63942,
  63570,
  63161,
  62713,
  62227,
  61704,
  61143,
  60546,
  59912,
  59242,
  58537,
  57796,
  57021,
  56211,
  55367,
  54490,
  53580,
  52638,
  51664,
  50659,
  49623,
  48558,
  47463,
  46340,
  45189,
  44010,
  42805,
  41574,
  40319,
  39039,
  37735,
  36409,
  35061,
  33691,
  32302,
  30892,
  29465,
  28019,
  26557,
  25079,
  23585,
  22078,
  20557,
  19023,
  17479,
  15923,
  14358,
  12785,
  11203,
  9615,
  8022,
  6423,
  4821,
  3215,
  1608,
  0,
  -1608,
  -3215,
  -4821,
  -6423,
  -8022,
  -9615,
  -11203,
  -12785,
  -14358,
  -15923,
  -17479,
  -19023,
  -20557,
  -22078,
  -23585,
  -25079,
  -26557,
  -28019,
  -29465,
  -30892,
  -32302,
  -33691,
  -35061,
  -36409,
  -37735,
  -39039,
  -40319,
  -41574,
  -42805,
  -44010,
  -45189,
  -46340,
  -47463,
  -48558,
  -49623,
  -50659,
  -51664,
  -52638,
  -53580,
  -54490,
  -55367,
  -56211,
  -57021,
  -57796,
  -58537,
  -59242,
  -59912,
  -60546,
  -61143,
  -61704,
  -62227,
  -62713,
  -63161,
  -63570,
  -63942,
  -64275,
  -64570,
  -64825,
  -65042,
  -65219,
  -65357,
  -65456,
  -65515,
  -65535,
  -65515,
  -65456,
  -65357,
  -65219,
  -65042,
  -64825,
  -64570,
  -64275,
  -63942,
  -63570,
  -63161,
  -62713,
  -62227,
  -61704,
  -61143,
  -60546,
  -59912,
  -59242,
  -58537,
  -57796,
  -57021,
  -56211,
  -55367,
  -54490,
  -53580,
  -52638,
  -51664,
  -50659,
  -49623,
  -48558,
  -47463,
  -46340,
  -45189,
  -44010,
  -42805,
  -41574,
  -40319,
  -39039,
  -37735,
  -36409,
  -35061,
  -33691,
  -32302,
  -30892,
  -29465,
  -28019,
  -26557,
  -25079,
  -23585,
  -22078,
  -20557,
  -19023,
  -17479,
  -15923,
  -14358,
  -12785,
  -11203,
  -9615,
  -8022,
  -6423,
  -4821,
  -3215,
  -1608,
  0,
  1608,
  3215,
  4821,
  6423,
  8022,
  9615,
  11203,
  12785,
  14358,
  15923,
  17479,
  19023,
  20557,
  22078,
  23585,
  25079,
  26557,
  28019,
  29465,
  30892,
  32302,
  33691,
  35061,
  36409,
  37735,
  39039,
  40319,
  41574,
  42805,
  44010,
  45189,
  46340,
  47463,
  48558,
  49623,
  50659,
  51664,
  52638,
  53580,
  54490,
  55367,
  56211,
  57021,
  57796,
  58537,
  59242,
  59912,
  60546,
  61143,
  61704,
  62227,
  62713,
  63161,
  63570,
  63942,
  64275,
  64570,
  64825,
  65042,
  65219,
  65357,
  65456,
  65515
);

  constant SIN_FINE_LUT : t_trigo_table := (
  0,
  6,
  12,
  18,
  25,
  31,
  37,
  43,
  50,
  56,
  62,
  69,
  75,
  81,
  87,
  94,
  100,
  106,
  113,
  119,
  125,
  131,
  138,
  144,
  150,
  157,
  163,
  169,
  175,
  182,
  188,
  194,
  201,
  207,
  213,
  219,
  226,
  232,
  238,
  245,
  251,
  257,
  263,
  270,
  276,
  282,
  289,
  295,
  301,
  307,
  314,
  320,
  326,
  333,
  339,
  345,
  351,
  358,
  364,
  370,
  376,
  383,
  389,
  395,
  402,
  408,
  414,
  420,
  427,
  433,
  439,
  446,
  452,
  458,
  464,
  471,
  477,
  483,
  490,
  496,
  502,
  508,
  515,
  521,
  527,
  534,
  540,
  546,
  552,
  559,
  565,
  571,
  578,
  584,
  590,
  596,
  603,
  609,
  615,
  622,
  628,
  634,
  640,
  647,
  653,
  659,
  665,
  672,
  678,
  684,
  691,
  697,
  703,
  709,
  716,
  722,
  728,
  735,
  741,
  747,
  753,
  760,
  766,
  772,
  779,
  785,
  791,
  797,
  804,
  810,
  816,
  823,
  829,
  835,
  841,
  848,
  854,
  860,
  867,
  873,
  879,
  885,
  892,
  898,
  904,
  911,
  917,
  923,
  929,
  936,
  942,
  948,
  954,
  961,
  967,
  973,
  980,
  986,
  992,
  998,
  1005,
  1011,
  1017,
  1024,
  1030,
  1036,
  1042,
  1049,
  1055,
  1061,
  1068,
  1074,
  1080,
  1086,
  1093,
  1099,
  1105,
  1112,
  1118,
  1124,
  1130,
  1137,
  1143,
  1149,
  1156,
  1162,
  1168,
  1174,
  1181,
  1187,
  1193,
  1200,
  1206,
  1212,
  1218,
  1225,
  1231,
  1237,
  1243,
  1250,
  1256,
  1262,
  1269,
  1275,
  1281,
  1287,
  1294,
  1300,
  1306,
  1313,
  1319,
  1325,
  1331,
  1338,
  1344,
  1350,
  1357,
  1363,
  1369,
  1375,
  1382,
  1388,
  1394,
  1401,
  1407,
  1413,
  1419,
  1426,
  1432,
  1438,
  1444,
  1451,
  1457,
  1463,
  1470,
  1476,
  1482,
  1488,
  1495,
  1501,
  1507,
  1514,
  1520,
  1526,
  1532,
  1539,
  1545,
  1551,
  1558,
  1564,
  1570,
  1576,
  1583,
  1589,
  1595,
  1602
);
  
  constant COS_FINE_LUT : t_trigo_table := (
  65535,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65534,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65533,
  65532,
  65532,
  65532,
  65532,
  65532,
  65532,
  65532,
  65532,
  65532,
  65532,
  65532,
  65532,
  65532,
  65532,
  65532,
  65532,
  65532,
  65532,
  65531,
  65531,
  65531,
  65531,
  65531,
  65531,
  65531,
  65531,
  65531,
  65531,
  65531,
  65531,
  65531,
  65531,
  65531,
  65531,
  65530,
  65530,
  65530,
  65530,
  65530,
  65530,
  65530,
  65530,
  65530,
  65530,
  65530,
  65530,
  65530,
  65529,
  65529,
  65529,
  65529,
  65529,
  65529,
  65529,
  65529,
  65529,
  65529,
  65529,
  65529,
  65529,
  65528,
  65528,
  65528,
  65528,
  65528,
  65528,
  65528,
  65528,
  65528,
  65528,
  65528,
  65527,
  65527,
  65527,
  65527,
  65527,
  65527,
  65527,
  65527,
  65527,
  65527,
  65526,
  65526,
  65526,
  65526,
  65526,
  65526,
  65526,
  65526,
  65526,
  65526,
  65525,
  65525,
  65525,
  65525,
  65525,
  65525,
  65525,
  65525,
  65525,
  65525,
  65524,
  65524,
  65524,
  65524,
  65524,
  65524,
  65524,
  65524,
  65524,
  65523,
  65523,
  65523,
  65523,
  65523,
  65523,
  65523,
  65523,
  65522,
  65522,
  65522,
  65522,
  65522,
  65522,
  65522,
  65522,
  65521,
  65521,
  65521,
  65521,
  65521,
  65521,
  65521,
  65521,
  65520,
  65520,
  65520,
  65520,
  65520,
  65520,
  65520,
  65520,
  65519,
  65519,
  65519,
  65519,
  65519,
  65519,
  65519,
  65518,
  65518,
  65518,
  65518,
  65518,
  65518,
  65518,
  65517,
  65517,
  65517,
  65517,
  65517,
  65517,
  65517,
  65516,
  65516,
  65516,
  65516,
  65516,
  65516,
  65516,
  65515,
  65515,
  65515,
  65515
);

begin

sin_coarse_data <= std_logic_vector(to_signed(SIN_COARSE_LUT(conv_integer(sin_coarse_add)),32));
cos_coarse_data <= std_logic_vector(to_signed(COS_COARSE_LUT(conv_integer(cos_coarse_add)),32));
sin_fine_data <= std_logic_vector(to_signed(SIN_FINE_LUT(conv_integer(sin_fine_add)),32));
cos_fine_data <= std_logic_vector(to_signed(COS_FINE_LUT(conv_integer(cos_fine_add)),32));

end Behavioral;
